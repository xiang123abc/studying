
多线程共享和独享的资源


进程是资源分配的基本单位；线程是系统调度的基本单位。
平时我们写的程序都是作为线程运行的；进程可以看做是包括一系列线程和资源的统称；一个进程至少包括一个
线程（主线程，进入main函数时产生的）；在其中可以创建其它线程，也可以不创建。
同一进程间的线程究竟共享哪些资源呢，而又各自独享哪些资源呢？
共享的资源有
	a. 堆  由于堆是在进程空间中开辟出来的，所以它是理所当然地被共享的；因此new出来的都是共享的（16位平台上分全局堆和局部堆，局部堆是独享的）
	b. 全局变量 它是与具体某一函数无关的，所以也与特定线程无关；因此也是共享的
	c. 静态变量虽然对于局部变量来说，它在代码中是“放”在某一函数中的，但是其存放位置和全局变量一样，存于堆中开辟的.bss和.data段，是共享的
	d. 文件等公用资源  这个是共享的，使用这些公共资源的线程必须同步。Win32 提供了几种同步资源的方式，包括信号、临界区、事件和互斥体。
独享的资源有
	a. 栈 栈是独享的
	b. 寄存器  这个可能会误解，因为电脑的寄存器是物理的，每个线程去取值难道不一样吗？其实线程里存放的是副本，包括程序计数器PC